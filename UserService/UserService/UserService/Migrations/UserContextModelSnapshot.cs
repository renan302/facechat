// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserService.Context;

namespace UserService.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UserService.Models.UserClass", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateAt");

                    b.Property<int>("Excluded");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(33);

                    b.Property<string>("Secret")
                        .HasMaxLength(33);

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("UserId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("UserService.Models.UserFriendClass", b =>
                {
                    b.Property<long>("UserFriendId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Blocked");

                    b.Property<DateTime>("CreateAt");

                    b.Property<int>("Excluded");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("UserId");

                    b.Property<long>("UserIdFriend");

                    b.HasKey("UserFriendId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserIdFriend");

                    b.ToTable("userfriend");
                });

            modelBuilder.Entity("UserService.Models.UserFriendClass", b =>
                {
                    b.HasOne("UserService.Models.UserClass", "MyUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UserService.Models.UserClass", "FriendUser")
                        .WithMany()
                        .HasForeignKey("UserIdFriend")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
